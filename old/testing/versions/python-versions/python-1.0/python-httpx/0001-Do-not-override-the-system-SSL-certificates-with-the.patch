From d03e57b75c2eb8a3696b6dd9a5f84aba4f01280c Mon Sep 17 00:00:00 2001
From: Eli Schwartz <eschwartz@archlinux.org>
Date: Mon, 13 Jul 2020 11:29:54 -0400
Subject: [PATCH] Do not override the system SSL certificates with the certifi
 bundle.

We need to respect the system certification policy, and by default the
ssl module will use our packaged ca-certificates.

ssl.create_default_context(cafile=None) is the default to use the
builtin (system) certs, but due to the sorcery which this module uses to
check how arguments are being passed, it's less invasive to simply
hardcode the standard certificate path instead of letting python
properly handle it.
---
 httpx/_config.py     | 4 +---
 setup.py             | 1 -
 tests/test_config.py | 5 ++---
 3 files changed, 3 insertions(+), 7 deletions(-)

diff --git a/httpx/_config.py b/httpx/_config.py
index 8d589ea..ea256a8 100644
--- a/httpx/_config.py
+++ b/httpx/_config.py
@@ -5,8 +5,6 @@ import warnings
 from base64 import b64encode
 from pathlib import Path
 
-import certifi
-
 from ._models import URL, Headers
 from ._types import CertTypes, HeaderTypes, TimeoutTypes, URLTypes, VerifyTypes
 from ._utils import get_ca_bundle_from_env, get_logger, warn_deprecated
@@ -57,7 +55,7 @@ class SSLConfig:
     SSL Configuration.
     """
 
-    DEFAULT_CA_BUNDLE_PATH = Path(certifi.where())
+    DEFAULT_CA_BUNDLE_PATH = Path("/etc/ssl/certs/ca-certificates.crt")
 
     def __init__(
         self,
diff --git a/setup.py b/setup.py
index e811d2a..2eaf419 100644
--- a/setup.py
+++ b/setup.py
@@ -55,7 +55,6 @@ setup(
     include_package_data=True,
     zip_safe=False,
     install_requires=[
-        "certifi",
         "sniffio",
         "chardet==3.*",
         "rfc3986[idna2008]>=1.3,<2",
diff --git a/tests/test_config.py b/tests/test_config.py
index 5c68bad..a03c607 100644
--- a/tests/test_config.py
+++ b/tests/test_config.py
@@ -3,7 +3,6 @@ import ssl
 import sys
 from pathlib import Path
 
-import certifi
 import pytest
 
 import httpx
@@ -21,7 +20,7 @@ def test_load_ssl_config_verify_non_existing_path():
 
 
 def test_load_ssl_config_verify_existing_file():
-    context = httpx.create_ssl_context(verify=certifi.where())
+    context = httpx.create_ssl_context(verify="/etc/ssl/certs/ca-certificates.crt")
     assert context.verify_mode == ssl.VerifyMode.CERT_REQUIRED
     assert context.check_hostname is True
 
@@ -44,7 +43,7 @@ def test_load_ssl_config_verify_env_file(
 
 
 def test_load_ssl_config_verify_directory():
-    path = Path(certifi.where()).parent
+    path = Path("/etc/ssl/certs/ca-certificates.crt").parent
     context = httpx.create_ssl_context(verify=str(path))
     assert context.verify_mode == ssl.VerifyMode.CERT_REQUIRED
     assert context.check_hostname is True
-- 
2.28.0

