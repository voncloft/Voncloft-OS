diff -rupN wiimms-iso-tools.orig/project/Makefile wiimms-iso-tools/project/Makefile
--- wiimms-iso-tools.orig/project/Makefile	2020-08-14 16:44:53.248171741 +0200
+++ wiimms-iso-tools/project/Makefile	2020-08-14 16:54:48.841047552 +0200
@@ -171,7 +171,7 @@ endif
 TOPT_wit	:= $(OPT_STATIC)
 TOPT_wwt	:= $(OPT_STATIC)
 TOPT_wdf	:= $(OPT_STATIC)
-TOPT_wfuse	:= -lfuse -lpthread -ldl
+TOPT_wfuse	:= -lfuse -lpthread
 
 #TOPT_ALL	:= $(TOPT_wit) $(TOPT_wwt) $(TOPT_wdf) $(TOPT_wfuse)
 
@@ -206,8 +206,8 @@ else
 endif
 
 # lib summary
-LIB_LIST	+= libbz2 lzma
-LIB_OBJECTS	+= $(LIBBZ2_OBJ) $(LZMA_OBJ)
+LIB_LIST	+= lzma
+LIB_OBJECTS	+= $(LZMA_OBJ)
 RM_FILES	+= $(foreach l,$(LIB_LIST),src/$(l)/*.{d,o})
 
 
@@ -297,10 +297,8 @@ DEFINES1	+= -D_7ZIP_ST=1		# disable 7zip
 DEFINES1	+= -D_LZMA_PROB32=1	# LZMA option
 DEFINES		=  $(strip $(DEFINES1) $(MODE) $(XDEF))
 
-CFLAGS		+= -fomit-frame-pointer -fno-strict-aliasing -funroll-loops
 CFLAGS		+= -Wall -Wno-parentheses -Wno-unused-function
-#CFLAGS		+= -O3 -Isrc/libwbfs -Isrc/lzma -Isrc -I$(UI) -I. -Iwork
-CFLAGS		+= -O3 -Isrc/libwbfs -Isrc -I$(UI) -I. -Iwork
+CFLAGS		+= -Isrc/libwbfs -Isrc -I$(UI) -I. -Iwork
 
 ifeq ($(SYSTEM_LINUX),1)
   LIBS		+= -ltinfo
@@ -327,7 +325,7 @@ LDFLAGS		:= $(strip $(LDFLAGS))
 ifeq ($(HAVE_ZLIB),1)
  LIBS		+= -lz
 endif
-LIBS		+= -lm -lncurses $(XLIBS)
+LIBS		+= -lm $(shell pkg-config --libs ncurses) -lbz2 $(XLIBS)
 
 DISTRIB_RM	= ./wit-v$(VERSION)-r
 DISTRIB_BASE	= wit-v$(VERSION)-r$(REVISION_NEXT)
@@ -380,83 +378,70 @@ default_rule: all
 # general rules
 
 $(ALL_TOOLS_X): %: %.o $(ALL_OBJECTS) $(TOBJ_ALL) Makefile | $(HELPER_TOOLS)
-	@printf "$(LOGFORMAT_TOOL)" tool "$@" "$(MODE) $(TOPT_$@) $(TOBJ_$@)"
-	@$(CC) $(CFLAGS) $(DEFINES) $(LDFLAGS) $@.o \
+	$(CC) $(CFLAGS) $(DEFINES) $(LDFLAGS) $@.o \
 		$(ALL_OBJECTS) $(TOBJ_$@) $(LIBS) $(TOPT_$@) -o $@
-	@if test -f $@.exe; then $(STRIP) $@.exe; else $(STRIP) $@; fi
 
-	@mkdir -p bin/$(SYSTEM) bin/$(SYSTEM)/debug
-	@if test -s $(MODE_FILE) && grep -Fq -e -DDEBUG $(MODE_FILE); \
+	mkdir -p bin/$(SYSTEM) bin/$(SYSTEM)/debug
+	if test -s $(MODE_FILE) && grep -Fq -e -DDEBUG $(MODE_FILE); \
 		then cp -p $@ bin/$(SYSTEM)/debug/; \
 		else cp -p $@ bin/; cp -p $@ bin/$(SYSTEM)/; fi
 
 #--------------------------
 
 $(HELPER_TOOLS): %: %.o $(ALL_OBJECTS) $(UI_TABS) Makefile
-	@printf "$(LOGFORMAT_TOOL)" helper "$@ $(TOBJ_$@)" "$(MODE)"
-	@$(CC) $(CFLAGS) $(DEFINES) $(LDFLAGS) $@.o \
+	$(CC) $(CFLAGS) $(DEFINES) $(LDFLAGS) $@.o \
 		$(ALL_OBJECTS) $(TOBJ_$@) $(LIBS) -o $@
 
 #--------------------------
 
 $(WDF_LINKS): wdf
-	@printf "$(LOGFORMAT_INST)" "link" "wdf -> $@" ""
-	@ln -f wdf "$@"
+	ln -f wdf "$@"
 
 #--------------------------
 
 $(UI_OBJECTS): %.o: %.c ui-%.c ui-%.h version.h Makefile
-	@printf "$(LOGFORMAT_CC)" +object "$@" "$(MODE)"
-	@$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
+	$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
 
 #--------------------------
 
 $(C_OBJECTS): %.o: %.c version.h Makefile $(TEXT_FILES)
-	@printf "$(LOGFORMAT_CC)" object "$@" "$(MODE)"
-	@$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
+	$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
 
 #--------------------------
 
 $(ASM_OBJECTS): %.o: %.S Makefile
-	@printf "$(LOGFORMAT_CC)" asm "$@" "$(MODE)"
-	@$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
+	$(CC) $(CFLAGS) $(DEPFLAGS) $(DEFINES) -c $< -o $@
 
 #--------------------------
 
 $(SETUP_FILES): templates.sed $(SETUP_DIR)/$@
-	@printf "$(LOGFORMAT)" create "$@" ""
-	@chmod 775 $(GEN_TEMPLATE)
-	@$(GEN_TEMPLATE) $@
+	chmod 775 $(GEN_TEMPLATE)
+	$(GEN_TEMPLATE) $@
 
 #--------------------------
 
 $(TEXT_FILES): $(GEN_TEXT_FILE) $(TEXT_DIR)/$@
-	@printf "$(LOGFORMAT)" text "$@" ""
-	@chmod 775 $(GEN_TEXT_FILE)
-	@$(GEN_TEXT_FILE) $(TEXT_DIR) $@
+	chmod 775 $(GEN_TEXT_FILE)
+	$(GEN_TEXT_FILE) $(TEXT_DIR) $@
 
 #--------------------------
 
 $(UI_FILES): gen-ui.c ui.h $(UI_TABS) | gen-ui
-	@printf "$(LOGFORMAT)" run gen-ui ""
-	@./gen-ui
+	./gen-ui
 
 .PHONY : ui
 ui : gen-ui
-	@printf "$(LOGFORMAT)" run gen-ui ""
-	@./gen-ui
+	./gen-ui
 
 #
 ###############################################################################
 # lib specific rules
 
 $(LIBBZ2_OBJ): %.o: %.c Makefile
-	@printf "$(LOGFORMAT_CC)" object "$(subst src/libbz2/,,$@)" "$(MODE) [libbz2]"
-	@$(CC) $(CFLAGS) $(DEPFLAGS) $(BZIP2_FLAGS) $(DEFINES) -c $< -o $@
+	$(CC) $(CFLAGS) $(DEPFLAGS) $(BZIP2_FLAGS) $(DEFINES) -c $< -o $@
 
 $(LZMA_OBJ): %.o: %.c Makefile
-	@printf "$(LOGFORMAT_CC)" object "$(subst src/lzma/,,$@)" "$(MODE) [lzma]"
-	@$(CC) $(CFLAGS) $(DEPFLAGS) $(LZMA_FLAGS) $(DEFINES) -c $< -o $@
+	$(CC) $(CFLAGS) $(DEPFLAGS) $(LZMA_FLAGS) $(DEFINES) -c $< -o $@
 
 #
 ###############################################################################
@@ -654,9 +633,8 @@ doc: $(MAIN_TOOLS) templates.sed gen-doc
 
 .PHONY : gen-doc
 gen-doc:
-	@printf "$(LOGFORMAT)" create documentation ""
-	@chmod ug+x $(GEN_TEMPLATE)
-	@$(GEN_TEMPLATE)
+	chmod ug+x $(GEN_TEMPLATE)
+	$(GEN_TEMPLATE)
 
 #
 #--------------------------
@@ -840,13 +818,12 @@ templates.sed: Makefile
 
 .PHONY : test
 test:
-	@printf "$(LOGFORMAT)" enable test "-> define -DTEST"
-	@rm -f *.o $(ALL_TOOLS_X)
-	@echo "-DTEST" >>$(MODE_FILE)
-	@sort $(MODE_FILE) | uniq > $(MODE_FILE).tmp
+	rm -f *.o $(ALL_TOOLS_X)
+	echo "-DTEST" >>$(MODE_FILE)
+	sort $(MODE_FILE) | uniq > $(MODE_FILE).tmp
 # 2 steps to bypass a cygwin mv failure
-	@cp $(MODE_FILE).tmp $(MODE_FILE)
-	@rm -f $(MODE_FILE).tmp
+	cp $(MODE_FILE).tmp $(MODE_FILE)
+	rm -f $(MODE_FILE).tmp
 
 #
 #--------------------------
