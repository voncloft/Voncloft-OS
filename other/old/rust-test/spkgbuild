# description	: The Rust programming language is designed to be a safe, concurrent, practical language
# depends	: curl cmake python llvm libssh2

name=rust
version=1.57.0
release=1

source="https://github.com/rust-lang/rust/archive/refs/tags/$versiontar.gz"
options="!checksum"
build() {
	cd rust 
	
	#cp config.toml.example config.toml
	cat <<-EOF > config.toml
	[llvm]
	# by default, rust will build for a myriad of architectures
	targets = "X86"

	# When using system llvm prefer shared libraries
	link-shared = true

	[build]
	# omit docs to save time and space (default is to build them)
	docs = false

	# install cargo as well as rust
	extended = true

	[install]
	prefix = "/usr"

	[rust]
	channel = "stable"
	rpath = false

	# BLFS does not install the FileCheck executable from llvm,
	# so disable codegen tests
	codegen-tests = false

	[target.x86_64-unknown-linux-gnu]
	# NB the output of llvm-config (i.e. help options) may be
	# dumped to the screen when config.toml is parsed.
	llvm-config = "/usr/bin/llvm-config"

	[target.i686-unknown-linux-gnu]
	# NB the output of llvm-config (i.e. help options) may be
	# dumped to the screen when config.toml is parsed.
	llvm-config = "/usr/bin/llvm-config"
	EOF
	
	export RUSTFLAGS="$RUSTFLAGS -C link-args=-lffi"
	python3 ./x.py build --exclude src/tools/miri
	export LIBSSH2_SYS_USE_PKG_CONFIG=1
	DESTDIR=$PKG python3 ./x.py install -v
	unset LIBSSH2_SYS_USE_PKG_CONFIG
}
