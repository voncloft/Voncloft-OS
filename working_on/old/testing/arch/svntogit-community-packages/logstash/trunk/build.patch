diff --git a/build.gradle b/build.gradle
index 5b2275e..67312d6 100644
--- a/build.gradle
+++ b/build.gradle
@@ -111,7 +111,6 @@ def isReleaseBuild = System.getenv('RELEASE') == "1" || versionQualifier
 clean {
   delete "${projectDir}/Gemfile"
   delete "${projectDir}/Gemfile.lock"
-  delete "${projectDir}/vendor"
   delete "${projectDir}/.bundle"
   delete "${projectDir}/qa/integration/Gemfile.lock"
   delete "${projectDir}/qa/integration/.bundle"
@@ -346,7 +345,7 @@ task downloadEs(type: Download) {
     // in the normal PR type builds it is plain '7.0.0'
     // in the build invoked by the release manager it is '7.0.0-alpha1' etc.
     // the artifacts-api will return JSON like this: `{"versions":["5.6.13-SNAPSHOT","6.4.3-SNAPSHOT","6.5.0-SNAPSHOT","6.6.0-SNAPSHOT","7.0.0-alpha1-SNAPSHOT"]}`
-    
+
     String qualifiedVersion = dlVersions['versions'].grep(isReleaseBuild ? ~/^${version}$/ : ~/^${version}-SNAPSHOT/)[0]
 
     if (qualifiedVersion == null) {
diff --git a/rubyUtils.gradle b/rubyUtils.gradle
index 6f0eec4..08a35f6 100644
--- a/rubyUtils.gradle
+++ b/rubyUtils.gradle
@@ -190,7 +190,7 @@ task downloadJRuby(type: Download) {
 
 downloadJRuby.onlyIf { customJRubyDir == "" }
 
-task verifyFile(dependsOn: downloadJRuby, type: Verify) {
+task verifyFile(type: Verify) {
     description "Verify the SHA1 of the download JRuby artifact"
     inputs.file(jrubyTarPath)
     outputs.file(jrubyTarPath)
@@ -202,36 +202,7 @@ task verifyFile(dependsOn: downloadJRuby, type: Verify) {
 verifyFile.onlyIf { customJRubyDir == "" }
 verifyFile.onlyIf { doChecksum }
 
-task buildCustomJRuby(type: Exec) {
-    description "Build tar.gz and .jar artifacts from JRuby source directory"
-    workingDir (customJRubyDir == "" ? "./" : customJRubyDir)
-    commandLine './mvnw', 'clean', 'install', '-Pdist', '-Pcomplete'
-    standardOutput = new ByteArrayOutputStream()
-    errorOutput = new ByteArrayOutputStream()
-    ext.output = {
-        standardOutput.toString() + errorOutput.toString()
-    }
-}
-
-buildCustomJRuby.onlyIf { customJRubyDir != "" }
-
-task installCustomJRuby(dependsOn: buildCustomJRuby, type: Copy) {
-    description "Install custom built JRuby in the vendor directory"
-    inputs.file(customJRubyTar)
-    outputs.dir("${projectDir}/vendor/jruby")
-    from tarTree(customJRubyTar == "" ? jrubyTarPath : customJRubyTar)
-    eachFile { f ->
-        f.path = f.path.replaceFirst("^jruby-${customJRubyVersion}", '')
-    }
-    exclude "**/stdlib/rdoc/**"
-    includeEmptyDirs = false
-    into "${projectDir}/vendor/jruby"
-}
-
-installCustomJRuby.onlyIf { customJRubyDir != "" }
-
-
-task downloadAndInstallJRuby(dependsOn: [verifyFile, installCustomJRuby], type: Copy) {
+task downloadAndInstallJRuby(dependsOn: [verifyFile], type: Copy) {
     description "Install JRuby in the vendor directory"
     inputs.file(jrubyTarPath)
     outputs.dir("${projectDir}/vendor/jruby")
