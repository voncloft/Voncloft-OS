# Maintainer: David Runge <dvzrv@archlinux.org>
# Contributor: Ray Rashif <schiv@archlinux.org>
# Contributor: speps <speps at aur dot archlinux dot org>

pkgname=suil
pkgver=0.10.10
pkgrel=1
pkgdesc="A lightweight C library for loading and wrapping LV2 plugin UIs"
arch=('x86_64')
url="https://drobilla.net/software/suil/"
license=('custom:ISC')
depends=('glibc')
makedepends=('gtk2' 'gtk3' 'lv2' 'python' 'qt5-base' 'qt5-x11extras' 'waf')
optdepends=('atk: support for wrapping X11 and Qt5 in GTK2/3 and GTK2 in Qt5'
            'cairo: support for wrapping X11 and Qt5 in GTK2/3'
            'fontconfig: support for wrapping X11 and Qt5 in GTK2 and GTK2 in Qt5'
            'gcc-libs: support for wrapping GTK2 and X11 in Qt5 and Qt5 in GTK2/3'
            'gdk-pixbuf2: support for wrapping X11 and Qt5 in GTK2/3 and GTK2 in Qt5'
            'glib2: support for wrapping X11 and Qt5 in GTK2/3 and GTK2 in Qt5'
            'gtk2: support for wrapping X11 and Qt5 in GTK2 and GTK2 in Qt5'
            'gtk3: support for wrapping X11 and Qt5 in GTK3'
            'libfreetype.so: support for wrapping X11 and Qt5 in GTK2 and GTK2 in Qt5'
            'libx11: support for wrapping X11 directly and in GTK2/3'
            'qt5-base: support for wrapping X11 in Qt5, Qt5 in GTK2/3 and GTK2 in Qt5'
            'qt5-x11extras: support for wrapping X11 in Qt5'
            'pango: support for wrapping X11 in GTK2/3, Qt5 in GTK2/3 and GTK2 in Qt5'
            'zlib: support for wrapping X11 in GTK3 and Qt5 in GTK3')
provides=('libsuil-0.so')
source=("https://download.drobilla.net/${pkgname}-${pkgver}.tar.bz2"{,.asc})
sha512sums=('e442022096150b2f71d65bbd625e2e262cb3e3865c57f5a30f0472dac8ef90ad2fbbf67235823055019017e3751b46330f6e98b8e1745e5845eb02c4d2a4fc21'
            'SKIP')
b2sums=('03d1ac744fa3fa487bbf44d6e006f6cfcc73dc4aa6eb79d1ac5d024dc9493e3e426ff6054705d1de514286b2d43f5a1448bfcf7e573fa95d61c41790ca06c405'
        'SKIP')
validpgpkeys=('907D226E7E13FA337F014A083672782A9BF368F3') # David Robillard <d@drobilla.net>

prepare() {
  cd "${pkgname}-${pkgver}"
  # remove local call to ldconfig
  sed -i "/ldconfig/d" wscript
  # let wscript(s) find the custom waf scripts
  mkdir -pv tools
  touch __init__.py
  cp -v waflib/extras/{autoship,autowaf,lv2}.py tools/
  mkdir -pv plugins/tools/
  cp -v waflib/extras/{autoship,autowaf,lv2}.py plugins/tools/
  rm -rv waflib
  sed -e 's/waflib.extras/tools/g' \
      -e "s/load('autowaf'/load('autowaf', tooldir='tools'/g" \
      -e "s/load('lv2'/load('lv2', tooldir='tools'/g" \
      -i wscript
}

build() {
  cd "${pkgname}-${pkgver}"
  waf configure --prefix=/usr
  waf build
}

package() {
  cd "${pkgname}-${pkgver}"
  waf install --destdir="${pkgdir}"
  # license
  install -vDm 644 COPYING \
    -t "${pkgdir}/usr/share/licenses/${pkgname}"
  # docs
  install -vDm 644 {AUTHORS,NEWS,PACKAGING,README.md} \
    -t "$pkgdir/usr/share/doc/${pkgname}"
}
# vim:set ts=2 sw=2 et:
