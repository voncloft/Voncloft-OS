# Maintainer: Balló György <ballogyor+arch at gmail dot com>

pkgname=fragments
pkgver=1.5
pkgrel=1
pkgdesc="BitTorrent client for GNOME"
arch=(x86_64)
url="https://gitlab.gnome.org/World/Fragments"
license=(GPL3)
depends=(curl libevent libhandy libnatpmp miniupnpc)
makedepends=(cmake git meson vala)
_commit=00d365e87e1ca4c1a0052db9dae90bd31e19e813  # tags/1.5
# see Flatpak file for corresponding transmission commit
_transmission_commit=3d9fd25269ccfc1dacf9c5cd23a3d232e0085150
source=("git+https://gitlab.gnome.org/World/Fragments.git#commit=$_commit"
        "git+https://github.com/transmission/transmission#commit=$_transmission_commit"
        "git+https://github.com/transmission/dht"
        "git+https://github.com/transmission/libb64"
        "git+https://github.com/transmission/libevent"
        "git+https://github.com/transmission/libnatpmp"
        "git+https://github.com/transmission/libutp"
        "git+https://github.com/transmission/miniupnpc"
        "libtransmission.patch")
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'c8c4c1b5a5035017c24c7c82da9d4d443c9fa6f85006441cdca0fdccac1400fb')

pkgver() {
  cd Fragments
  git describe --tags | sed 's/-/+/g'
}

prepare() {
  cd Fragments
  # Build libtransmission internally for now
  patch -RNp1 -i ../libtransmission.patch

  ln -s "$srcdir"/transmission submodules/transmission
  cd submodules/transmission
  git submodule init
  git config --local submodule.third-party/dht.url "$srcdir/dht"
  git config --local submodule.third-party/libb64.url "$srcdir/libb64"
  git config --local submodule.third-party/libevent.url "$srcdir/libevent"
  git config --local submodule.third-party/libnatpmp.url "$srcdir/libnatpmp"
  git config --local submodule.third-party/libutp.url "$srcdir/libutp"
  git config --local submodule.third-party/miniupnpc.url "$srcdir/miniupnpc"
  git submodule update
}

build() {
  arch-meson Fragments build
  meson compile -C build
}

check() {
  meson test -C build --print-errorlogs
}

package() {
  DESTDIR="$pkgdir" meson install -C build
}
