# Maintainer: Bruno Pagani <archange@archlinux.org>

_pkg=xarray
pkgname=python-${_pkg}
pkgver=0.16.2
pkgrel=1
pkgdesc="N-D labeled arrays and datasets in Python"
arch=(any)
url="https://xarray.pydata.org/"
license=(Apache)
makedepends=(python-setuptools)
depends=(python-numpy python-pandas)
optdepends=(
  'python-netcdf4: netCDF4 support'
  'python-scipy: interpolation features & fallback for netCDF3 support'
#  'python-pydap: fallback for accessing OPeNDAP'
#  'python-h5netcdf: alternative for netCDF4 support'
#  'python-pynio: geoscience specific file formats support' 
#  'python-zarr: chunked, compressed N-dimensional arrays'
  'python-cftime: datetimes support for non-standard calendars or distant dates'
#  'python-pseudonetcdf: atmospheric science specific file formats support'
#  'python-rasterio: GeoTiffs and other gridded raster datasets support'
#  'python-iris: conversion to and from irisâ€™ Cube objects'
#  'python-cfgrib: mapping GRIB files to CDF4'
  'python-bottleneck: faster NaN-skipping and rolling window aggregations'
#  'python-numbagg: faster exponential rolling window operations'  
  'python-dask: parallel computation'
  'python-distributed: parallel computation'
  'python-matplotlib: plotting support'
#  'python-cartopy: plotting of cartographic data'
  'python-seaborn: better color palettes for plots'
#  'python-nc-time-axis: plotting of cftime.datetime objects'  
#  'python-sparse: sparse arrays support'
  'python-pint: units of measure support'
)
checkdepends=(
    python-pytest
    python-netcdf4
    python-scipy
    python-cftime
    python-bottleneck
    python-dask
    python-distributed
    python-matplotlib
    python-seaborn
    python-pint
)
source=(https://files.pythonhosted.org/packages/source/${_pkg::1}/${_pkg}/${_pkg}-${pkgver}.tar.gz)
sha256sums=('38e8439d6c91bcd5b7c0fca349daf8e0643ac68850c987262d53526e9d7d01e4')

build() {
    cd ${_pkg}-${pkgver}
    python setup.py build
}

check() {
    cd ${_pkg}-${pkgver}
    # https://github.com/pydata/xarray/issues/4281
    pytest --deselect xarray/tests/test_distributed.py::test_serializable_locks
}

package() {
    cd ${_pkg}-${pkgver}
    python setup.py install --prefix=/usr --root="${pkgdir}" --skip-build --optimize=1
    # Remove tests
    rm -r "${pkgdir}"$(python -c "import site; print(site.getsitepackages()[0])")/xarray/tests
    # Fix permissions
    chmod -R a+r "${pkgdir}"$(python -c "import site; print(site.getsitepackages()[0])")/xarray/
}
