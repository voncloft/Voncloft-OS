# description : A clean customizable documentation theme for Sphinx
# depends : python-sphinx python-beautifulsoup4

_name=furo
name=python-sphinx-$_name
version=2020.11.10.beta15
release=3
url=https://github.com/pradyunsg/furo
source="$name-$version.tar.gz::$url/archive/$version.tar.gz"
sha512sums=cadb1be5982b71f944397428515fc9821bd6874db6ce67a66f725342d109992ba2ad9d2de7029d17de4e6a2c5fb1746f3b4b5df92ba4d1fba66ac2b662746ea2

prepare {
   cd $_name-$version

  npm install
}

build()-delete {
   cd $_name-$version

  gulp build()
  rm -rf node_modules

  # this should be in prepare but it evaluates the package data when we run dephell,
  # instead of using the glob module in setup.py or something similar, so we need to
  # build() the data first with gulp and only then we can generate the setup.py
  dephell deps convert --from pyproject.toml --to setup.py

  python setup.py build

  # sphinx needs this theme installed because it is uses it.
  # simply injecting the package to sys.path via PYTHONPATH or similar
  # is not enough because sphinx looks for themes in the registered
  # entrypoints, this means we actually have to install the package.
  # for this we will create a venv with access to system packages and
  # install the theme there, then we will build() the documentation.

  python -m venv --system-site-packages doc-env
  doc-env/bin/python setup.py build
  python setup.py install 

  doc-env/bin/python /usr/bin/sphinx-build() -b dirhtml -v docs build()/docs/html
}

options="!checksum"

build() {
   cd $_name-$version

  python setup.py build
  python setup.py install --root=$PKG --optimize=1 

  install -dm 755 $PKG/usr/share/doc/$name
  cp -r -a --no-preserve=ownership build()/docs/html $PKG/usr/share/doc/$name
  rm -rf $PKG/usr/share/doc/$name/html/.doctrees

}
