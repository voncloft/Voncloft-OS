#!/bin/bash

# Function to display help
show_help() {
  cat << EOF
Usage: $(basename "$0") [logfile(s) or pattern(s)]

Description:
  This script analyzes dnsmasq logs and counts NXDOMAIN occurrences by domain.

Options:
  -h                 Show this help message.
  [logfile(s)]       Specify one or more log files or wildcard patterns.
                     If no file is provided, defaults to /var/log/dnsmasq.log.

Examples:
  $(basename "$0")                      # Uses default /var/log/dnsmasq.log
  $(basename "$0") /var/log/dnsmasq.log.1
  $(basename "$0") "*/*/dnsmasq.log.1"
  $(basename "$0") 02/dnsmasq.log.1 03/dnsmasq.log.1
EOF
}

# Check for -h flag
if [[ "$1" == "-h" ]]; then
  show_help
  exit 0
fi

# Use provided paths or default
log_patterns=("$@")
[[ ${#log_patterns[@]} -eq 0 ]] && log_patterns=("/var/log/dnsmasq.log")

# Expand patterns into actual files
log_files=()
for pattern in "${log_patterns[@]}"; do
  found_files=( $(find / -path "$pattern" 2>/dev/null) )
  log_files+=( "${found_files[@]}" )
done

# Check if files are found
if [ ${#log_files[@]} -eq 0 ]; then
  echo "No log files found matching: ${log_patterns[*]}"
  exit 1
fi

# Process all matched files
for logfile in "${log_files[@]}"; do
  echo "Processing: $logfile"
  grep "NXDOMAIN" "$logfile" | \
  awk '{for (i=1; i<=NF; i++) if ($i ~ /^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/) print tolower($i)}'
done | sort | uniq -c | sort -nr
