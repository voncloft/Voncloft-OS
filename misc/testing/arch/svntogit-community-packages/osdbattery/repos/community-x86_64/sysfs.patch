--- osdbattery.c	2005-08-23 09:31:10.000000000 +0200
+++ osdbattery-1.5.c	2011-12-03 23:41:24.655759085 +0100
@@ -17,77 +17,55 @@
 #include <xosd.h>
 #endif
 
+int get_acpi_line(char* file, char* b, int size) {
+        FILE *fp;
+        fp = fopen(file, "r");
+        if (fp == NULL) {
+                printf("Cannot open ACPI info: \"%s\"\n Is ACPI supported by the kernel and is the \"display battery\" configuration correct?\n",file);
+                exit(1);
+        }
+
+        if (fgets(b, size, fp) == NULL) {
+                fclose(fp);
+                return 0;
+        }
+        b[strlen(b)-1] = 0; /* remove trailing newline*/
+
+        fclose(fp);
+        return 1;
+}
+
 int get_battery_state(battery_state_struct* battery_state, int bnum) {
-	char present_voltage[64];
-	char charging_state[64];
-	char remaining_capacity[64];
 	char file[64];
-	char b[256];
-	FILE *fp;
+	char b[64];
 
-	sprintf(file, "/proc/acpi/battery/BAT%d/state", bnum );
+        sprintf(file, "/sys/class/power_supply/BAT%d/status", bnum);
+        if ( get_acpi_line(file, b, sizeof(b)) )
+                strcpy(battery_state->charging_state, b);
+
+        sprintf(file, "/sys/class/power_supply/BAT%d/voltage_now", bnum);
+        if ( get_acpi_line(file, b, sizeof(b)) )
+                battery_state->present_voltage = atoi(b);
+
+        sprintf(file, "/sys/class/power_supply/BAT%d/charge_now", bnum);
+        if ( get_acpi_line(file, b, sizeof(b)) )
+                battery_state->remaining_capacity = atoi(b);
 
-	fp = fopen(file, "r");
-	if (fp == NULL) {
-		printf("Cannot open ACPI info! Is ACPI supported by the kernel?\n");
-		exit(1);
-	}
-
-	rewind(fp);
-	while (!feof(fp)) {
-
-		if (fgets(b, 256, fp) == NULL) {
-			fclose(fp);
-			return 0;
-		} 		
-
-		if (sscanf(b, "present voltage: %63s", present_voltage ) != errno) {
-			battery_state->present_voltage = atoi(present_voltage);
-		}
-
-		if (sscanf(b, "charging state: %63s", charging_state ) != errno) {
-			strcpy(battery_state->charging_state, charging_state);
-		}
-
-		if (sscanf(b, "remaining capacity: %63s", remaining_capacity ) != errno) {
-			battery_state->remaining_capacity = atoi(remaining_capacity);
-
-		}
-	}	
-	fclose(fp);
 	return 0;
 }
+
 int get_battery_info(battery_info_struct* battery_info, int bnum) { 	
-	char design_voltage[64];
-	char last_full_capacity[64];
 	char file[64];
+	char b[64];
 
-	sprintf(file, "/proc/acpi/battery/BAT%d/info", bnum );
-
-	FILE *fp = fopen(file,"r");
-	if (fp == NULL) {
-		printf("can not open acpi info, acpi supported by kernel?\n");
-		exit(1);
-	}
-
-	rewind(fp);
-	char b[256];
-
-	while (!feof(fp)) {
-
-		if (fgets(b, 256, fp) == NULL) {
-			fclose(fp);
-			return 0;
-		}
-
-		if (sscanf(b, "design voltage: %63s", design_voltage) != errno) {
-			battery_info->design_voltage = atoi(design_voltage);							   	}
-
-		if (sscanf(b, "last full capacity: %63s", last_full_capacity) != errno) {
-			battery_info->last_full_capacity = atoi(last_full_capacity);	
-		}
+        sprintf(file, "/sys/class/power_supply/BAT%d/voltage_min_design", bnum);
+        if ( get_acpi_line(file, b, sizeof(b)) )
+                battery_info->design_voltage = atoi(b);
+
+        sprintf(file, "/sys/class/power_supply/BAT%d/charge_full", bnum);
+        if ( get_acpi_line(file, b, sizeof(b)) )
+                battery_info->last_full_capacity = atoi(b);
 
-	}
 	return 0;
 }
 
