# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: berberman <hatsue@typed.icu>

_hkgname=tomland
pkgname=haskell-tomland
pkgver=1.3.1.0
pkgrel=49
pkgdesc="Implementation of bidirectional TOML serialization."
url="https://github.com/kowainik/tomland"
license=('MPL2')
arch=('x86_64')
depends=('ghc-libs' 'haskell-hashable' 'haskell-megaparsec' 'haskell-parser-combinators'
         'haskell-unordered-containers' 'haskell-validation-selective')
makedepends=('ghc' 'haskell-hedgehog' 'haskell-hspec' 'haskell-hspec-golden'
             'haskell-hspec-hedgehog' 'haskell-hspec-megaparsec')
source=("https://hackage.haskell.org/packages/archive/$_hkgname/$pkgver/$_hkgname-$pkgver.tar.gz")
sha512sums=('2a68260c2d765d396097965321d76022fa0746b186c301c5cc198825d7ebc37d60fd9951c1263a196f98f2cdab4db6157dc5b80efe6532c89bd76d95005c56db')

prepare(){
  cd $_hkgname-$pkgver
  echo -e "import Distribution.Simple\nmain = defaultMain" > Setup.hs
  sed -i '/^executable/a\  buildable: False' $_hkgname.cabal
}

build() {
  cd $_hkgname-$pkgver    
    
  runhaskell Setup configure -O --enable-shared --enable-executable-dynamic --disable-library-vanilla \
    --prefix=/usr --docdir=/usr/share/doc/$pkgname --enable-tests \
    --dynlibdir=/usr/lib --libsubdir=\$compiler/site-local/\$pkgid \
    --ghc-option=-optl-Wl\,-z\,relro\,-z\,now \
    --ghc-option='-pie'

  runhaskell Setup build $MAKEFLAGS
  runhaskell Setup register --gen-script
  runhaskell Setup unregister --gen-script
  sed -i -r -e "s|ghc-pkg.*update[^ ]* |&'--force' |" register.sh
  sed -i -r -e "s|ghc-pkg.*unregister[^ ]* |&'--force' |" unregister.sh
}

check() {
  cd $_hkgname-$pkgver
  runhaskell Setup test
}

package() {
  cd $_hkgname-$pkgver

  install -D -m744 register.sh "$pkgdir"/usr/share/haskell/register/$pkgname.sh
  install -D -m744 unregister.sh "$pkgdir"/usr/share/haskell/unregister/$pkgname.sh
  runhaskell Setup copy --destdir="$pkgdir"
  install -D -m644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
  rm -f "$pkgdir"/usr/share/doc/$pkgname/LICENSE
}
