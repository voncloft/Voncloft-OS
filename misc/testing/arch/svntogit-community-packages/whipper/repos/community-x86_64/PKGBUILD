# Maintainer : Christian Rebischke <Chris.Rebischke@archlinux.org>
# Maintainer : Bruno Pagani <archange@archlinux.org>
# Contributor: Frederik "Freso" S. Olesen <archlinux@freso.dk>
# Contributor: Bastien Traverse <firstname at lastname dot email>
# Contributor: Samantha Baldwin <fuhsaz+git@cryptic.li>
# Contributor: Caleb Reach <jtxx000@gmail.com>
# Contributor: Felix Yan <felixonmars@gmail.com>
# Contributor: Karol "Kenji Takahashi" Woźniak <kenji.sx>
# Contributor: Mantas Mikulėnas <grawity@gmail.com>

pkgname=whipper
pkgver=0.9.0
pkgrel=2
pkgdesc="A Unix CD ripper aiming for accuracy over speed -- forked from morituri"
arch=(x86_64)
url="https://github.com/whipper-team/whipper"
license=(GPL3)
depends=(
  cdrdao                # for session, TOC, pregap, and ISRC extraction
  libcdio-paranoia      # for the actual ripping
  libsndfile            # for reading wav files (pulls in flac, also required for reading flac files)
  python-gobject
  python-musicbrainzngs # for metadata lookup
  python-mutagen        # for metadata handling
  python-pycdio         # for storing drive identification in config file
  python-requests
  python-ruamel-yaml    # for log output
  python-setuptools     # for plugin support
  sox                   # for track peak detection
)
checkdepends=(
  python-twisted
)
optdepends=('flac: For free lossless audio codec (FLAC) support')
makedepends=(python-setuptools-scm)
conflicts=(accuraterip-checksum)
provides=(accuraterip-checksum)
source=("${url}/archive/v${pkgver}/${pkgname}-v${pkgver}.tar.gz")
sha512sums=('49e66ad2c6e8450199a53a28bb71725704daac86ce2cbf68080d4dee1c2357cf8367ddb4735a07f2ffe612d84f016661e5b6f94efa9d5a7d6b8cf56ee32b0ae7')

build() {
  cd ${pkgname}-${pkgver}
  echo "Version: ${pkgver}" > PKG-INFO
  python setup.py build
}

check() {
  cd ${pkgname}-${pkgver}
  local python_version=$(python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
  # https://github.com/whipper-team/whipper/issues/515
  PYTHONPATH="build/lib.linux-${CARCH}-${python_version}/" python -m unittest discover || echo "Tests failed"
}

package() {
  cd ${pkgname}-${pkgver}
  python setup.py install --root="${pkgdir}"/ --optimize=1 --skip-build
}
