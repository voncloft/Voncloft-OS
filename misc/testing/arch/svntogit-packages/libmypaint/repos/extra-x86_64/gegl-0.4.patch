diff -u -r libmypaint-1.3.0/configure.ac libmypaint-1.3.0-gegl/configure.ac
--- libmypaint-1.3.0/configure.ac	2018-05-13 16:49:44.997077642 +0200
+++ libmypaint-1.3.0-gegl/configure.ac	2018-05-13 16:49:36.223744476 +0200
@@ -45,7 +45,7 @@
           [libmypaint_api_major().libmypaint_api_minor().libmypaint_api_micro()m4_bpatsubst(libmypaint_api_prerelease(), [^\(.\)], [-\1])])
 
 # Dependencies.
-m4_define([gegl_required_version], [0.3])
+m4_define([gegl_required_version], [0.4])
 m4_define([introspection_required_version], [1.32.0])
 
 AC_INIT([libmypaint],
@@ -336,7 +336,7 @@
 )
 
 if eval "test x$enable_gegl = xyes"; then
-  PKG_CHECK_MODULES(GEGL, gegl-0.3 >= gegl_required_version)
+  PKG_CHECK_MODULES(GEGL, gegl-0.4 >= gegl_required_version)
 fi
 AM_CONDITIONAL(ENABLE_GEGL, test "x$enable_gegl" = "xyes")
 
diff -u -r libmypaint-1.3.0/gegl/libmypaint-gegl.pc.in libmypaint-1.3.0-gegl/gegl/libmypaint-gegl.pc.in
--- libmypaint-1.3.0/gegl/libmypaint-gegl.pc.in	2016-12-01 23:47:14.000000000 +0100
+++ libmypaint-1.3.0-gegl/gegl/libmypaint-gegl.pc.in	2018-05-13 16:50:16.620410376 +0200
@@ -6,6 +6,6 @@
 Name: libmypaint
 Description: MyPaint brush engine library, with GEGL integration.
 Version: @LIBMYPAINT_VERSION@
-Requires: gegl-0.3 libmypaint
+Requires: gegl-0.4 libmypaint
 Cflags: -I${includedir}/libmypaint-gegl
 Libs: -L${libdir} -lmypaint-gegl
diff -u -r libmypaint-1.3.0/gegl/Makefile.am libmypaint-1.3.0-gegl/gegl/Makefile.am
--- libmypaint-1.3.0/gegl/Makefile.am	2018-05-13 16:48:53.437078622 +0200
+++ libmypaint-1.3.0-gegl/gegl/Makefile.am	2018-05-13 16:49:58.523744053 +0200
@@ -11,7 +11,7 @@
 INTROSPECTION_GIRS =
 INTROSPECTION_SCANNER_ARGS = \
     --warn-all \
-    --pkg="gegl-0.3" \
+    --pkg="gegl-0.4" \
     --pkg="glib-2.0" \
     --namespace="MyPaintGegl" \
     --nsversion="$(LIBMYPAINT_MAJOR_VERSION).$(LIBMYPAINT_MINOR_VERSION)" \
@@ -38,7 +38,7 @@
 	mypaint-gegl-surface.c
 
 MyPaintGegl-@LIBMYPAINT_MAJOR_VERSION@.@LIBMYPAINT_MINOR_VERSION@.gir: libmypaint-gegl.la Makefile
-MyPaintGegl_@LIBMYPAINT_MAJOR_VERSION@_@LIBMYPAINT_MINOR_VERSION@_gir_INCLUDES = GObject-2.0 MyPaint-$(LIBMYPAINT_MAJOR_VERSION).$(LIBMYPAINT_MINOR_VERSION) Gegl-0.3
+MyPaintGegl_@LIBMYPAINT_MAJOR_VERSION@_@LIBMYPAINT_MINOR_VERSION@_gir_INCLUDES = GObject-2.0 MyPaint-$(LIBMYPAINT_MAJOR_VERSION).$(LIBMYPAINT_MINOR_VERSION) Gegl-0.4
 MyPaintGegl_@LIBMYPAINT_MAJOR_VERSION@_@LIBMYPAINT_MINOR_VERSION@_gir_CFLAGS = $(AM_CFLAGS) $(AM_CPPFLAGS) -I. -I..
 MyPaintGegl_@LIBMYPAINT_MAJOR_VERSION@_@LIBMYPAINT_MINOR_VERSION@_gir_LIBS = libmypaint-gegl.la ../libmypaint.la
 MyPaintGegl_@LIBMYPAINT_MAJOR_VERSION@_@LIBMYPAINT_MINOR_VERSION@_gir_FILES = $(introspection_sources)

--- a/gegl/mypaint-gegl-surface.c
+++ b/gegl/mypaint-gegl-surface.c
@@ -78,7 +78,11 @@ tile_request_start(MyPaintTiledSurface *tiled_surface, MyPaintTileRequest *reque
 
     if (buffer_is_native(self)) {
         GeglBufferIterator *iterator = gegl_buffer_iterator_new(self->buffer, &tile_bbox, 0, self->format,
+#if GEGL_MAJOR_VERSION == 0 && GEGL_MINOR_VERSION == 4 && GEGL_MICRO_VERSION >= 14
+                                      read_write_flags, GEGL_ABYSS_NONE, 8);
+#else
                                       read_write_flags, GEGL_ABYSS_NONE);
+#endif
 
         // Read out
         gboolean completed = gegl_buffer_iterator_next(iterator);
@@ -88,7 +92,11 @@ tile_request_start(MyPaintTiledSurface *tiled_surface, MyPaintTileRequest *reque
             g_critical("Unable to get tile aligned access to GeglBuffer");
             request->buffer = NULL;
         } else {
+#if GEGL_MAJOR_VERSION == 0 && GEGL_MINOR_VERSION == 4 && GEGL_MICRO_VERSION >= 14
+            request->buffer = (uint16_t *)(iterator->items[0].data);
+#else
             request->buffer = (uint16_t *)(iterator->data[0]);
+#endif
         }
 
         // So we can finish the iterator in tile_request_end()
